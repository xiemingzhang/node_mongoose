登录：
逻辑：如果登录的用户名没有的话，则提示用户没有注册，否则提示用户名或密码错误

查询：
1、直接拿用户名和密码去查询
他得到的结果要么有一条以上的数据，要么没有数据

2、拿用户名去查询
拿到用户名如果查询不存在，则表示没有注册？
如果查询到了，我们则可以匹配用户名和密码是否正确


怎么返回登录之前的页面？
前端：
1、当点击登录时获取当前的URL，
    保存方式1：用locastorage或其他方式保存
    保存方式2：直接放在URL当做参数

后端：
获取到访问之前的URL，登录之后跳转到之前的URL


登录时的判断：
密码（加密）和数据库的密码（加密）
123456  ==  123456

实体前后端拆分：
前端可能会涉及多个表
而后端可能只有一个


评论：
打开页面时使用ajax加载评论列表（如果有需要可以做成当滚动到评论时再加载）
当点击评论提交按钮，则提交评论内容，然后重新加载评论页面


二级菜单：
根据现有文章类型表，增加一个父ID即可，然后根据ID分类





二级菜单：
权限管理：（是否有浏览权限？浏览的权限有多大？）
在线人数统计：Socket！（connection）





项目层级

古代为例：
    皇帝
        兵部尚书（部门负责人）：
            负责人：只是把任务分配下去
            省的负责人：
                市的负责人：
                    县、镇、村、。。。。

        刑部尚书：
        礼部尚书：

公司的一个典型的现状：
    每个人写代码的方式和习惯都不一样？
    指定自己的模块和规范：



公司：
    老板：boss
        部门负责人：
        行政部：（找下面的人）

        采购部：




代码万变不离其宗：
安卓、Python
好奇












只加载右侧：
1、iframe：一般只应用于后台（简单）
优点：
1、他可以不调整页面，直接刷新我们需要刷新的位置

缺点：
1、就是只有一个URL


2、ajax：异步加载HTML（稍微复杂点）
后台不是特别常见






